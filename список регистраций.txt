—Å–ø–∏—Å–æ–∫ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–π
select id, created_at, device_id, tg_id, full_name, dob, points, marketing_opt_in
from profiles
order by created_at desc;

—Ñ–∏–ª—å—Ç—Ä –ø–æ –¥–Ω—è–º —Ä–æ–∂–¥–µ–Ω–∏–π
select tg_id
from profiles
where marketing_opt_in = true
  and tg_id is not null
  and dob is not null
  and date_part('month', dob) = date_part('month', now());


—Ç–∏–ø–∏—á–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞
import 'dotenv/config'
import { createClient } from '@supabase/supabase-js'
const url = process.env.SUPABASE_URL!, key = process.env.SUPABASE_SERVICE_ROLE_KEY!
const sb = createClient(url, key)

async function send(chatId: string, text: string) {
  const token = process.env.TELEGRAM_BOT_TOKEN!
  await fetch(`https://api.telegram.org/bot${token}/sendMessage`, {
    method: 'POST',
    headers: { 'Content-Type':'application/json' },
    body: JSON.stringify({ chat_id: chatId, text })
  })
}

;(async () => {
  const { data } = await sb.rpc('sql', { /* –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ select –∫–∞–∫ –≤—ã—à–µ —á–µ—Ä–µ–∑ .from */ })
  for (const row of data ?? []) {
    try { await send(String(row.tg_id), 'üéÅ –Ü–º–µ–Ω–∏–Ω–Ω–∏–∫–∞–º ‚Äî –∫–∞–ø—É—á—ñ–Ω–æ –∑—ñ –∑–Ω–∏–∂–∫–æ—é 50%! –¢—ñ–ª—å–∫–∏ —Ü—å–æ–≥–æ —Ç–∏–∂–Ω—è.') } catch {}
  }
})()
